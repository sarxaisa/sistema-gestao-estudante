<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>